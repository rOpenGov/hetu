[{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Install current devel version R: Test installation loading library: also recommend setting UTF-8 encoding:","code":"devtools::install_github(\"ropengov/hetu\") library(hetu) Sys.setlocale(locale=\"UTF-8\")"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Finnish personal identification numbers (Finnish: henkilötunnus, hetu short), used identify citizens. Hetu PIN consists eleven characters: DDMMYYCZZZQ, DDMMYY day, month year birth, C century marker, ZZZ individual number Q control character. Males odd females even individual number. control character determined dividing DDMMYYZZZ 31 using remainder (modulo 31) pick corresponding character string “0123456789ABCDEFHJKLMNPRSTUVWXY”. example, remainder 0, control character 0 remainder 12, control character C. valid individual number 002-899. Individual numbers 900-999 normal use used temporary artificial PINs. temporary PINs sometimes used different organizations, insurance companies hospitals, individual Finnish citizen, permanent resident exact identity individual determined time. Artificial temporary PINs intended continuous, long term use usually accepted PIN validity checking algorithms. Temporary PINs provide similar information individual’s birth date sex regular PINs. Temporary PINs can also safely used testing purposes, number linked real person.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"personal-identification-numbers-hetu","dir":"Articles","previous_headings":"","what":"Personal identification numbers (HETU)","title":"Finnish personal ID number data toolkit for R (hetu)","text":"basic hetu function can used view information included Finnish personal identification number. data outputted data frame. output can made prettier, example using knitr: hetu function also accepts vectors several identification numbers input: hetu function print warning messages user input vector contains invalid PINs. Validity specific PINs can determined looking valid.pin column.","code":"example_pin <- \"111111-111C\" hetu(example_pin) #>          hetu  sex p.num ctrl.char       date day month year century valid.pin #> 1 111111-111C Male   111         C 1911-11-11  11    11 1911       -      TRUE knitr::kable(hetu(example_pin)) example_pins <- c(\"010101-0101\", \"111111-111C\") knitr::kable(hetu(example_pins)) hetu(c(\"010101-0102\", \"111311-111C\", \"010101-0101\")) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0102 Female   010         2 1901-01-01   1     1 1901       - #> 2 111311-111C   Male   111         C       <NA>  11    NA 1911       - #> 3 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #>   valid.pin #> 1     FALSE #> 2     FALSE #> 3      TRUE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"extracting-specific-information","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Extracting specific information","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Information contained PIN can extracted generic extract parameter. Valid values extraction hetu, sex, personal.number, ctrl.char, date, day, month, year, century, valid.pin .temp. .temp can extracted allow.temp set TRUE. allow.temp set FALSE (default), temporary PINs filtered output information provided .temp meaningless. fields can extracted specialized functions. Extracting sex hetu_sex function: Extracting age current date given date hetu_age function: Dates (birth dates) also function, hetu_date.","code":"hetu(example_pins, extract = \"sex\") #> [1] \"Female\" \"Male\" hetu(example_pins, extract = \"ctrl.char\") #> [1] \"1\" \"C\" hetu_sex(example_pins) #> [1] \"Female\" \"Male\" hetu_age(example_pins) #> The age in years has been calculated at 2022-03-14. #> [1] 121 110 hetu_age(example_pins, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100 hetu_age(example_pins, timespan = \"months\") #> The age in months has been calculated at 2022-03-14. #> [1] 1454 1324 hetu_date(example_pins) #> [1] \"1901-01-01\" \"1911-11-11\""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"validity-checking","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Validity checking","title":"Finnish personal ID number data toolkit for R (hetu)","text":"basic hetu function output includes information validity pin, can extracted using hetu-function valid.pin extract parameter. validity PINs can also determined using hetu_ctrl function, produces vector:","code":"hetu_ctrl(c(\"010101-0101\", \"111111-111C\")) # TRUE TRUE #> [1] TRUE TRUE hetu_ctrl(\"010101-1010\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"artificial-and-temporary-personal-identification-numbers","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Artificial and temporary personal identification numbers","title":"Finnish personal ID number data toolkit for R (hetu)","text":"package functions can made accept artificial temporary personal identification numbers. Artificial temporary PINs can used normally allowing allow.temp parameter. vector regular temporary PINs mixed together prints regular PINs, allow.temp set TRUE. Automatic omitting temporary PINs produce visible error message therefore users need cautious want use temporary PINs. temporary PINs explicitly allowed input vector consists temporary PINs , function return error. allow.temp set TRUE, PINs handled regular PINs. Validation function hetu_ctrl produces FALSE every artificial / temporary PIN, explicitly allowed.","code":"example_temp_pin <- \"010101A900R\" knitr::kable(hetu(example_temp_pin, allow.temp = TRUE)) example_temp_pins <- c(\"010101A900R\", \"010101-0101\") hetu_ctrl(\"010101A900R\", allow.temp = FALSE) #> [1] NA knitr::kable(hetu(example_temp_pins)) knitr::kable(hetu(example_temp_pins, allow.temp = TRUE)) hetu_ctrl(\"010101A900R\", allow.temp = TRUE) #> [1] TRUE knitr::kable(hetu(example_temp_pins)) #FALSE TRUE knitr::kable(hetu(example_temp_pins, allow.temp = TRUE)) #TRUE TRUE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"generating-random-pins","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Generating random PINs","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Random PINs can generated using rpin function. number males generated sample can changed parameter p.male. Default 0.4. default proportion artificial / temporary PINs 0.0, meaning artificial / temporary PINs generated default.","code":"rhetu(n = 4) #> [1] \"161102-2359\" \"150581-562R\" \"050683-8585\" \"140220A6935\" rhetu(n = 4, start.date = \"1990-01-01\", end.date = \"2005-01-01\") #> [1] \"130491-8428\" \"241193-538P\" \"171098-293S\" \"120403A237C\" random_sample <- rhetu(n = 4, p.male = 0.8) table(random_sample) #> random_sample #> 010630-6794 100135-419T 140191-813J 140209A4438  #>           1           1           1           1 temp_sample <- rhetu(n = 4, p.temp = 0.5) table(hetu(temp_sample, allow.temp = TRUE, extract = \"is.temp\")) #>  #> FALSE  #>     4"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"diagnostics","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Diagnostics","title":"Finnish personal ID number data toolkit for R (hetu)","text":"addition information mentioned section Extracting specific information, user can choose print additional columns containing information checks done PINs. diagnostic checks produce TRUE FALSE following categories: valid.p.num, valid.checksum, correct.checksum, valid.date, valid.day, valid.month, valid.year, valid.length valid.century, FALSE meaning hetu somehow incorrect. Diagnostic information can examined closely using subset using separate hetu_diagnostics function. user can print diagnostic information PINs dataset: using extract, user can limit printed columns FALSE values. subsetting set TRUE, function prints rows FALSE value extracted test. way PINs handled inside hetu-function, diagnostics-function can show unexpected warning messages introduce NAs coercion date-part PIN long. may result inability handle PIN !","code":"diagnosis_example <- c(\"010101-0102\", \"111111-111Q\",  \"010101B0101\", \"320101-0101\", \"011301-0101\",  \"010101-01010\", \"010101-0011\") head(hetu(diagnosis_example, diagnostic = TRUE), 3) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0102 Female   010         2 1901-01-01   1     1 1901       - #> 2 111111-111Q   Male   111         Q 1911-11-11  11    11 1911       - #> 3 010101B0101 Female   010         1       <NA>   1     1   NA       B #>   valid.pin valid.p.num valid.ctrl.char correct.ctrl.char valid.date valid.day #> 1     FALSE        TRUE            TRUE             FALSE       TRUE      TRUE #> 2     FALSE        TRUE           FALSE             FALSE       TRUE      TRUE #> 3     FALSE        TRUE            TRUE              TRUE      FALSE      TRUE #>   valid.month valid.year valid.length valid.century #> 1        TRUE       TRUE         TRUE          TRUE #> 2        TRUE       TRUE         TRUE          TRUE #> 3        TRUE       TRUE         TRUE         FALSE tail(hetu_diagnostic(diagnosis_example), 3) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE hetu_diagnostic(diagnosis_example, extract = c(\"valid.century\", \"correct.checksum\")) #> Error in hetu_diagnostic(diagnosis_example, extract = c(\"valid.century\", : Trying to extract invalid diagnostic(s) hetu_diagnostic(diagnosis_example, subsetting = TRUE, extract = \"valid.century\") #>          hetu    sex p.num ctrl.char date day month year century valid.pin #> 1 010101B0101 Female   010         1 <NA>   1     1   NA       B     FALSE #>   valid.p.num valid.ctrl.char correct.ctrl.char valid.date valid.day #> 1        TRUE            TRUE              TRUE      FALSE      TRUE #>   valid.month valid.year valid.length valid.century is.temp #> 1        TRUE       TRUE         TRUE         FALSE   FALSE # Faulty example hetu_diagnostic(c(\"01011901-01010\"))"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"business-identity-codes-bid","dir":"Articles","previous_headings":"","what":"Business Identity Codes (BID)","title":"Finnish personal ID number data toolkit for R (hetu)","text":"package also ability generate Finnish Business ID codes (y-tunnus) check validity. Unlike personal identification numbers, additional information can extracted Business IDs.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"generating-random-bids","dir":"Articles","previous_headings":"Business Identity Codes (BID)","what":"Generating random BIDs","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Similar hetu PINs, random Finnish Business IDs (y-tunnus) can generated using rbid function.","code":"bid_sample <- rbid(3) bid_sample #> [1] \"8823572-7\" \"5744314-4\" \"4743521-2\""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"bid-validity-checking","dir":"Articles","previous_headings":"Business Identity Codes (BID)","what":"BID validity checking","title":"Finnish personal ID number data toolkit for R (hetu)","text":"validity Finnish Business Identity Codes can checked similar function hetu_ctrl: bid_ctrl.","code":"bid_ctrl(c(\"0737546-2\", \"1572860-0\")) # TRUE TRUE #> [1] TRUE TRUE bid_ctrl(\"0737546-1\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"various-examples","dir":"Articles","previous_headings":"","what":"Various examples","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Data frames generated hetu function work well tidyverse/dplyr workflows well.","code":"library(hetu) library(tidyverse) library(dplyr)  # Generate data for this example hdat<-tibble(pin=rhetu(n = 4, start_date = \"1990-01-01\", end_date = \"2005-01-01\"))  # Extract all the hetu information to tibble format hdat<-hdat %>%   mutate(result=map(.x=pin,.f=hetu::hetu)) %>% unnest(cols=c(result)) hdat"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"licensing-and-citations","dir":"Articles","previous_headings":"","what":"Licensing and Citations","title":"Finnish personal ID number data toolkit for R (hetu)","text":"work can freely used, modified distributed open license specified DESCRIPTION file. Kindly cite work follows","code":"citation(\"hetu\") #>  #> Kindly cite the hetu R package as follows: #>  #>   Pyry Kantanen, Mans Magnusson, Jussi Paananen and Leo Lahti (rOpenGov #>   2022). hetu: Structural Handling of Finnish Personal Identity Codes. #>   R package version 1.0.6.9000 URL: http://github.com/rOpenGov/hetu #>  #> A BibTeX entry for LaTeX users is #>  #>   @Misc{, #>     title = {hetu: Structural Handling of Finnish Personal Identity Codes}, #>     author = {Pyry Kantanen and Mans Magnusson and Jussi Paananen and Leo Lahti}, #>     url = {https://github.com/rOpenGov/hetu}, #>     year = {2022}, #>     note = {R package version 1.0.6.9000}, #>   } #>  #> Many thanks for all contributors!"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Finnish personal ID number data toolkit for R (hetu)","text":"personal identity code. Digital population data services agency. Valtioneuvoston asetus väestötietojärjestelmästä (128/2010) (Finnish). Valtiovarainministeriö. HETU-uudistuksen loppuraportti (Finnish). Valtiovarainministeriön julkaisuja 2020:20. Business Information System (BIS). Finnish Patent Registration Office.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Finnish personal ID number data toolkit for R (hetu)","text":"vignette created ","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] hetu_1.0.6.9000 #>  #> loaded via a namespace (and not attached): #>  [1] highr_0.9         bslib_0.3.1       compiler_4.1.3    pillar_1.7.0      #>  [5] jquerylib_0.1.4   tools_4.1.3       digest_0.6.29     lubridate_1.8.0   #>  [9] tibble_3.1.6      jsonlite_1.8.0    evaluate_0.15     memoise_2.0.1     #> [13] lifecycle_1.0.1   checkmate_2.0.0   pkgconfig_2.0.3   rlang_1.0.2       #> [17] cli_3.2.0         parallel_4.1.3    yaml_2.3.5        pkgdown_2.0.2     #> [21] xfun_0.30         fastmap_1.1.0     stringr_1.4.0     dplyr_1.0.8       #> [25] knitr_1.37        desc_1.4.1        generics_0.1.2    fs_1.5.2          #> [29] sass_0.4.0        vctrs_0.3.8       systemfonts_1.0.4 tidyselect_1.1.2  #> [33] rprojroot_2.0.2   glue_1.6.2        R6_2.5.1          textshaping_0.3.6 #> [37] fansi_1.0.2       rmarkdown_2.13    purrr_0.3.4       magrittr_2.0.2    #> [41] backports_1.4.1   htmltools_0.5.2   ellipsis_0.3.2    ragg_1.2.2        #> [45] utf8_1.2.2        stringi_1.7.6     cachem_1.0.6      crayon_1.5.0"},{"path":"https://ropengov.github.io/hetu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pyry Kantanen. Author, maintainer. Mans Magnusson. Author. Jussi Paananen. Author. Juho Kopra. Contributor. Oskari Luomala. Contributor. Tuomo Nieminen. Contributor. Leo Lahti. Author.","code":""},{"path":"https://ropengov.github.io/hetu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pyry Kantanen, Mans Magnusson, Jussi Paananen Leo Lahti (rOpenGov 2022). hetu: Structural Handling Finnish Personal Identity Codes. R package version 1.0.6.9000 URL: http://github.com/rOpenGov/hetu","code":"@Misc{,   title = {hetu: Structural Handling of Finnish Personal Identity Codes},   author = {Pyry Kantanen and Mans Magnusson and Jussi Paananen and Leo Lahti},   url = {https://github.com/rOpenGov/hetu},   year = {2022},   note = {R package version 1.0.6.9000}, }"},{"path":[]},{"path":"https://ropengov.github.io/hetu/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Structural Handling of Finnish Personal Identity Codes","text":"hetu R package structural handling national identification numbers used Finland, specifically Finnish personal identity codes (Finnish: henkilötunnus (hetu), Swedish: personbeteckning). functions can also used Finnish Business ID numbers (y-tunnus). syntax package unified similar package Swedish ID numbers, sweidnumbr.","code":""},{"path":"https://ropengov.github.io/hetu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Structural Handling of Finnish Personal Identity Codes","text":"Install stable version CRAN: Alternatively, use devtools package install latest development version GitHub: Development version can also installed using r-universe:","code":"install.packages(hetu) devtools::install_github(\"rOpenGov/hetu\") # Enable this universe options(repos = c(   ropengov = \"https://ropengov.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) install.packages(\"hetu\")"},{"path":"https://ropengov.github.io/hetu/index.html","id":"loading-the-package-and-accessing-the-tutorial","dir":"","previous_headings":"","what":"Loading the package and accessing the tutorial","title":"Structural Handling of Finnish Personal Identity Codes","text":"Load package: simple example printing table containing data 2 imaginary personal identity codes: package can also used check validity Finnish Business IDs (Yritys- ja Yhteisötunnus, Y-tunnus short): tutorial included package can viewed vignette-function:","code":"library(hetu) example_hetu <- c(\"010101-0101\", \"111111-111C\") hetu(example_hetu) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #> 2 111111-111C   Male   111         C 1911-11-11  11    11 1911       - #>   valid.pin #> 1      TRUE #> 2      TRUE example_ytunnus <- c(\"5996039-9\", \"5619117-6\", \"6095515-9\") bid_ctrl(example_ytunnus) #> [1] TRUE TRUE TRUE vignette(\"hetu\")"},{"path":"https://ropengov.github.io/hetu/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Structural Handling of Finnish Personal Identity Codes","text":"Submit suggestions bug reports (provide output sessionInfo() packageVersion(\"hetu\") preferably provide reproducible example) Send pull request Star us Github page See website additional contact information","code":""},{"path":"https://ropengov.github.io/hetu/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Structural Handling of Finnish Personal Identity Codes","text":"Kindly cite work follows: Pyry Kantanen, Måns Magnusson, Jussi Paananen, Leo Lahti. hetu: Finnish personal ID number data toolkit R. URL: http://ropengov.github.io/hetu/ grateful contributors! project part rOpenGov.","code":""},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Finnish Business ID (y-tunnus) validity — bid_ctrl","title":"Check Finnish Business ID (y-tunnus) validity — bid_ctrl","text":"function checks whether bid (Finnish Business ID) valid.  Returns TRUE FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Finnish Business ID (y-tunnus) validity — bid_ctrl","text":"","code":"bid_ctrl(bid)"},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Finnish Business ID (y-tunnus) validity — bid_ctrl","text":"bid vector 1 business identity numbers","code":""},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Finnish Business ID (y-tunnus) validity — bid_ctrl","text":"","code":"bid_ctrl(c(\"0000000-0\", \"0000001-9\")) # TRUE TRUE #> [1] TRUE TRUE bid_ctrl(\"0737546-1\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package hetu. — hetu-deprecated","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"-deprecated\").","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"","code":"pin_to_date(pin)"},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":"pin-to-date","dir":"Reference","previous_headings":"","what":"pin_to_date","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"pin_to_date, use pin_date.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":null,"dir":"Reference","previous_headings":"","what":"Finnish personal identification number extraction — hetu","title":"Finnish personal identification number extraction — hetu","text":"Extract information Finnish personal identification    numbers (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finnish personal identification number extraction — hetu","text":"","code":"hetu(pin, extract = NULL, allow.temp = FALSE, diagnostic = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finnish personal identification number extraction — hetu","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors extract Extract selected part information. Valid values \"hetu\", \"sex\", \"p.num\", \"ctrl.char\", \"date\", \"day\", \"month\", \"year\", \"century\", \".temp\". NULL (default), returns information. allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed. diagnostic Print additional information possible problems PINs. checks \"valid.p.num\", \"valid.ctrl.char\", \"correct.ctrl.char\", \"valid.date\", \"valid.day\", \"valid.month\", \"valid.length\", \"valid.century\". Default FALSE returns diagnostic information.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finnish personal identification number extraction — hetu","text":"Finnish personal identification number data.frame,     extract parameter set, requested part    information vector. Returns error NA given    character vector valid Finnish personal identification number. hetu Finnish personal identification number character vector.     correct pin form DDMMYYCZZZQ, DDMMYY stands     date, C century sign, ZZZ personal number Q control     character. sex sex person character vector (\"Male\" \"Female\"). p.num Personal number part identification number. ctrl.char Control character personal identification number. date Birthdate. day Day birthdate. month Month birthdate. year Year birthdate. century Century character birthdate: + (1800), - (1900)    (2000). valid.pin personal identification number pass validity    checks: (TRUE FALSE)","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finnish personal identification number extraction — hetu","text":"Pyry Kantanen, Jussi Paananen","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finnish personal identification number extraction — hetu","text":"","code":"hetu(\"111111-111C\") #>          hetu  sex p.num ctrl.char       date day month year century valid.pin #> 1 111111-111C Male   111         C 1911-11-11  11    11 1911       -      TRUE hetu(\"111111-111C\")$date #> [1] \"1911-11-11\" hetu(\"111111-111C\")$sex #> [1] \"Male\" # Same as previous, but using extract argument hetu(\"111111-111C\", extract=\"sex\") #> [1] \"Male\" # Process a vector of hetu's hetu(c(\"010101-0101\", \"111111-111C\")) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #> 2 111111-111C   Male   111         C 1911-11-11  11    11 1911       - #>   valid.pin #> 1      TRUE #> 2      TRUE # Process a vector of hetu's and extract sex information from each hetu(c(\"010101-0101\", \"111111-111C\"), extract=\"sex\") #> [1] \"Female\" \"Male\""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"Calculate valid control character incomplete     Finnish personal identification numbers (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"","code":"hetu_control_char(pin, with.century = TRUE)"},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"pin incomplete PIN date, century marker (optional, see parameter .century) personal number .century TRUE (default), function assumes PIN  input contains century marker (DDMMYYQZZZ). FALSE, function  assumes PIN contains date personal number (DDMMYYZZZ).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"Control character, either number 0-9 letter.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"method calculating control character devised    mathematician Erkki Pale (1962) detect input errors also     detect errors produced early punch card machines. long number     produced writing birth date personal number together    divided 31 remainder used look control character    separate table containing alphanumeric characters except letters    G, , O, Q Z. method calculating control character need century     character therefore function option omit .","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finnish Personal Identification Number Control Character Calculator — hetu_control_char","text":"","code":"hetu_control_char(\"010101-010\") #> [1] \"1\" hetu_control_char(\"010101010\", with.century = FALSE) #> [1] \"1\""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics Tool for HETU — hetu_diagnostic","title":"Diagnostics Tool for HETU — hetu_diagnostic","text":"Produce data frame PINs may require closer scrutiny.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics Tool for HETU — hetu_diagnostic","text":"","code":"hetu_diagnostic(pin, extract = NULL, subsetting = FALSE)  pin_diagnostic(pin, extract = NULL, subsetting = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics Tool for HETU — hetu_diagnostic","text":"pin Finnish personal identification number character vector,  vector identification numbers character vectors extract Extract selected part diagnostic information. Valid values \"hetu\", \".temp\", \"valid.p.num\", \"valid.ctrl.char\", \"correct.ctrl.char\", \"valid.date\", \"valid.day\", \"valid.month\", \"valid.length\",  \"valid.century\". NULL (default), returns information. subsetting Print PINs validity check chosen  extract returns FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics Tool for HETU — hetu_diagnostic","text":"data.frame containing diagnostic checks PINs.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics Tool for HETU — hetu_diagnostic","text":"","code":"diagnosis_example <- c(\"010101-0102\", \"111111-111Q\",  \"010101B0101\", \"320101-0101\", \"011301-0101\",  \"010101-01010\", \"010101-0011\") ## Print all diagnoses hetu_diagnostic(diagnosis_example) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 1  010101-0102   FALSE        TRUE            TRUE             FALSE       TRUE #> 2  111111-111Q   FALSE        TRUE           FALSE             FALSE       TRUE #> 3  010101B0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 4  320101-0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 1      TRUE        TRUE       TRUE         TRUE          TRUE #> 2      TRUE        TRUE       TRUE         TRUE          TRUE #> 3      TRUE        TRUE       TRUE         TRUE         FALSE #> 4     FALSE        TRUE       TRUE         TRUE          TRUE #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE # Extract century-related checks hetu_diagnostic(diagnosis_example, extract = \"valid.century\") #>           hetu valid.century #> 1  010101-0102          TRUE #> 2  111111-111Q          TRUE #> 3  010101B0101         FALSE #> 4  320101-0101          TRUE #> 5  011301-0101          TRUE #> 6 010101-01010          TRUE #> 7  010101-0011          TRUE # Extract only rows where valid.ctrl.char = FALSE hetu_diagnostic(diagnosis_example, subsetting = TRUE, extract = \"valid.day\")  #>          hetu    sex p.num ctrl.char date day month year century valid.pin #> 1 320101-0101 Female   010         1 <NA>  NA     1 1901       -     FALSE #>   valid.p.num valid.ctrl.char correct.ctrl.char valid.date valid.day #> 1        TRUE            TRUE              TRUE      FALSE     FALSE #>   valid.month valid.year valid.length valid.century is.temp #> 1        TRUE       TRUE         TRUE          TRUE   FALSE  diagnosis_example <- c(\"010101-0102\", \"111111-111Q\",  \"010101B0101\", \"320101-0101\", \"011301-0101\",  \"010101-01010\", \"010101-0011\") ## Print all diagnoses pin_diagnostic(diagnosis_example) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 1  010101-0102   FALSE        TRUE            TRUE             FALSE       TRUE #> 2  111111-111Q   FALSE        TRUE           FALSE             FALSE       TRUE #> 3  010101B0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 4  320101-0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 1      TRUE        TRUE       TRUE         TRUE          TRUE #> 2      TRUE        TRUE       TRUE         TRUE          TRUE #> 3      TRUE        TRUE       TRUE         TRUE         FALSE #> 4     FALSE        TRUE       TRUE         TRUE          TRUE #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE"},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Age from ID — pin_age","title":"Age from ID — pin_age","text":"Calculate age full years given date.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age from ID — pin_age","text":"","code":"pin_age(pin, date = Sys.Date(), timespan = \"years\", allow.temp = FALSE)  hetu_age(pin, date = Sys.Date(), timespan = \"years\", allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age from ID — pin_age","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors date Date age calculated. vector provided  must length pin argument. timespan Timespan use calculate age. possible timespans : years (Default) months weeks days allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age from ID — pin_age","text":"Age integer vector.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age from ID — pin_age","text":"","code":"ex_pin <- c(\"010101-0101\", \"111111-111C\") pin_age(ex_pin, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100  ex_pin <- c(\"010101-0101\", \"111111-111C\") hetu_age(ex_pin, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100"},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Finnish Personal Identification Number Validator — pin_ctrl","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"Validate Finnish personal identification numbers (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"","code":"pin_ctrl(pin, allow.temp = FALSE)  hetu_ctrl(pin, allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors. allow.temp TRUE, temporary PINs (personal numbers 900-999)  handled similarly regular PINs (personal numbers 002-899), meaning  otherwise valid temporary PIN return TRUE. Default  FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"Logical indicating whether input string valid Finnish     personal identification number,","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finnish Personal Identification Number Validator — pin_ctrl","text":"","code":"pin_ctrl(\"010101-0101\") # TRUE #> [1] TRUE pin_ctrl(\"010101-010A\") # FALSE #> [1] FALSE hetu_ctrl(\"010101-0101\") # TRUE #> [1] TRUE hetu_ctrl(\"010101-010A\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Birth date from PIN — pin_date","title":"Get Birth date from PIN — pin_date","text":"Calculates date birth date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Birth date from PIN — pin_date","text":"","code":"pin_date(pin, allow.temp = FALSE)  hetu_date(pin, allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Birth date from PIN — pin_date","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Birth date from PIN — pin_date","text":"Date birth vector date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Birth date from PIN — pin_date","text":"","code":"pin_date(c(\"010101-0101\", \"111111-111C\")) #> [1] \"1901-01-01\" \"1911-11-11\"  hetu_date(c(\"010101-0101\", \"111111-111C\")) #> [1] \"1901-01-01\" \"1911-11-11\""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Sex From ID — pin_sex","title":"Sex From ID — pin_sex","text":"Extract sex Finnish personal identification number.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sex From ID — pin_sex","text":"","code":"pin_sex(pin, allow.temp = TRUE)  hetu_sex(pin, allow.temp = TRUE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sex From ID — pin_sex","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sex From ID — pin_sex","text":"Factor label 'Male' 'Female'.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sex From ID — pin_sex","text":"Pyry Kantanen, Leo Lahti","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sex From ID — pin_sex","text":"","code":"pin_sex(\"010101-010A\")  #> [1] \"Female\" hetu_sex(\"010101-010A\")  #> [1] \"Female\""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"ID to Date. — pin_to_date-deprecated","title":"ID to Date. — pin_to_date-deprecated","text":"Calculates date birth date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID to Date. — pin_to_date-deprecated","text":"","code":"pin_to_date(pin)"},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID to Date. — pin_to_date-deprecated","text":"pin Finnish ID number","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ID to Date. — pin_to_date-deprecated","text":"Date birth vector date format.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick Data Frame — quickdf","title":"Quick Data Frame — quickdf","text":"Speedups data.frame creation.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick Data Frame — quickdf","text":"","code":"quickdf(x)"},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick Data Frame — quickdf","text":"x named list equal length vectors","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick Data Frame — quickdf","text":"data.frame","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quick Data Frame — quickdf","text":"20x faster .data.frame.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quick Data Frame — quickdf","text":"Idea borrowed http://adv-r..co.nz/Profiling.html.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quick Data Frame — quickdf","text":"HW/LL","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","title":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","text":"function generates random Finnish Business ID's,     bid-numbers (Y-tunnus).","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","text":"","code":"rbid(n)"},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","text":"n number generated BIDs","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","text":"vector generated BID-numbers.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a vector of random Finnish Business ID's (y-tunnus) — rbid","text":"","code":"x <- rbid(3) bid_ctrl(x) #> [1] TRUE TRUE TRUE"},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of random hetu — rpin","title":"Generate a vector of random hetu — rpin","text":"function generates random hetu-pins.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of random hetu — rpin","text":"","code":"rpin(   n,   start.date = as.Date(\"1895-01-01\"),   end.date = Sys.Date(),   p.male = 0.4,   p.temp = 0,   num.cores = 1 )  rhetu(   n,   start.date = as.Date(\"1895-01-01\"),   end.date = Sys.Date(),   p.male = 0.4,   p.temp = 0,   num.cores = 1 )"},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a vector of random hetu — rpin","text":"n number generated hetu-pins start.date Lower limit generated hetu dates, character string ISO 8601 standard, example \"2001-02-03\". Default \"1895-01-01\". end.date Upper limit generated hetu.  Default current date. p.male Probability males, 0.0 1.0. Default 0.4. p.temp Probability temporary identification numbers, 0.0 1.0. Default 0.0. num.cores number cores parallel processing. number  available cores can determined detectCores(). Default 1.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a vector of random hetu — rpin","text":"vector generated hetu-pins.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a vector of random hetu — rpin","text":"finite number valid personal identity codes available per day. specifically, 498 odd personal numbers males 498 even personal numbers females range 002-899. Additionally 50 odd numbers males 50 even numbers females temporary personal identity code number range 900-999 normally use. function return error \"positive probabilities\"  sample.int function try generate many codes short enough  timeframe. theoretical upper limit valid PINs millions since 898 PINs available day, 327770 year. practice number much lower since personal number component  \"recycled\" used past. illustrate, identity  code \"010101-0101\" already assigned someone born 1901-01-01,  similar code \"010101A0101\" someone born 2001-01-01  used.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a vector of random hetu — rpin","text":"Pyry Kantanen, Jussi Paananen","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a vector of random hetu — rpin","text":"","code":"x <- rpin(3) hetu(x) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 110753-866B Female   866         B 1953-07-11  11     7 1953       - #> 2 010364-838L Female   838         L 1964-03-01   1     3 1964       - #> 3 111203A410S Female   410         S 2003-12-11  11    12 2003       A #>   valid.pin #> 1      TRUE #> 2      TRUE #> 3      TRUE hetu(x, extract = \"sex\") #> [1] \"Female\" \"Female\" \"Female\" hetu(x, extract = \"ctrl.char\") #> [1] \"B\" \"L\" \"S\"  x <- rhetu(3) x #> [1] \"180170-0569\" \"030304A447T\" \"140321A209L\""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Calculate valid control character incomplete     Finnish Unique Identification Number (FINUID, sähköinen asiointitunnus    SATU).","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"","code":"satu_control_char(pin, complement = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"pin incomplete FINUID 8 numbers complement function print ","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Control character, either number 0-9 letter. complete    TRUE, function returns complete FINUID / SATU number.","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"method calculating control character devised    mathematician Erkki Pale (1962) detect input errors also     detect errors produced early punch card machines. long number     produced writing birth date personal number together    divided 31 remainder used look control character    separate table containing alphanumeric characters except letters    G, , O, Q Z. method calculating control character need century     character therefore function option omit .","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"","code":"satu_control_char(\"10000001\") #> [1] \"N\""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Finnish Unique Identification Number validity — satu_ctrl","title":"Check Finnish Unique Identification Number validity — satu_ctrl","text":"function checks whether satu (Finnish Unique Identification  Number) valid. Returns TRUE FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Finnish Unique Identification Number validity — satu_ctrl","text":"","code":"satu_ctrl(satu)"},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Finnish Unique Identification Number validity — satu_ctrl","text":"satu vector 1 Unique Identification Numbers","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Finnish Unique Identification Number validity — satu_ctrl","text":"","code":"satu_ctrl(\"10000001N\") # TRUE #> [1] TRUE satu_ctrl(c(\"10000001N\", \"20000001B\")) # TRUE FALSE #> [1]  TRUE FALSE"},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-1069000-2022-01-18","dir":"Changelog","previous_headings":"","what":"hetu 1.0.6.9000 (2022-01-18)","title":"hetu 1.0.6.9000 (2022-01-18)","text":"Rewritten rpin() function increased speed Added new function hetu_control_char() internal use functions well convenience (sometimes know rest identity code just need determine control character) Added support checking validity Finnish electronic Unique Identification Numbers (SATU / FINUID). Two new functions: satu_ctrl() satu_ctrl_char(), former works like hetu_ctrl() latter works like abovementioned hetu_control_char() hetu() table column name checksum changed descriptive ctrl.char. change also affects related column names hetu_diagnostic()","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-103-2021-07-28","dir":"Changelog","previous_headings":"","what":"hetu 1.0.3 (2021-07-28)","title":"hetu 1.0.3 (2021-07-28)","text":"Implementing recommendations goodpractice (whole package) lintr (hetu.R) better code legibility Renamed internal objects make easier distinguish user input (function arguments), internal objects used intermediate steps output names data table New function hetu_control_char() easy calculation control characters birth date personal numbers already known","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-102-2020-11-23","dir":"Changelog","previous_headings":"","what":"hetu 1.0.2 (2020-11-23)","title":"hetu 1.0.2 (2020-11-23)","text":"Moving away Travis CI GitHub Actions","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-101-2020-10-15","dir":"Changelog","previous_headings":"","what":"hetu 1.0.1 (2020-10-15)","title":"hetu 1.0.1 (2020-10-15)","text":"CRAN release: 2020-10-24 Build submitted CRAN organized vignette, hetu BID examples separated Minor fixes hetu_diagnostic() rbid()","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-031-2020-10-14","dir":"Changelog","previous_headings":"","what":"hetu 0.3.1 (2020-10-14)","title":"hetu 0.3.1 (2020-10-14)","text":"Added function generating Finnish Business IDs, rbid() Added new alias hetu_diagnostic(), pin_diagnostic(), better consistency functions New examples package vignette","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-030-2020-10-13","dir":"Changelog","previous_headings":"","what":"hetu 0.3.0 (2020-10-13)","title":"hetu 0.3.0 (2020-10-13)","text":"Optimized functions: generating handling large amount PINs now much faster (tested 5.5 million PINs) new bid_ctrl() function checking validity Finnish Business IDs hetu() table column name personal.number changed shorter p.num","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-024-2020-09-10","dir":"Changelog","previous_headings":"","what":"hetu 0.2.4 (2020-09-10)","title":"hetu 0.2.4 (2020-09-10)","text":"Option print explicit diagnostics hetu-function hetu_diagnostic() function easier viewing diagnostic information","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-021-023-2020-09-09","dir":"Changelog","previous_headings":"","what":"hetu 0.2.1-0.2.3 (2020-09-09)","title":"hetu 0.2.1-0.2.3 (2020-09-09)","text":"Updates pkgdown Improvements vignette Warning messages new tests invalid inputs Fixes hetu.R handling temporary / artificial pins Tests deprecated pin_to_date function Added codecov integration Minor fixes","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-020-2020-09-04","dir":"Changelog","previous_headings":"","what":"hetu 0.2.0 (2020-09-04)","title":"hetu 0.2.0 (2020-09-04)","text":"Added rpin() function generating random hetu PINs Added ability handle temporary artificial hetu PINs (allow.temp, .temp) Added tests achieve 100 % test coverage Deprecation pin_to_date, addition pin_date() Numerous minor bugfixes additions help files vignettes","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-011-2012-06-26","dir":"Changelog","previous_headings":"","what":"hetu 0.1.1 (2012-06-26)","title":"hetu 0.1.1 (2012-06-26)","text":"Package created based earlier functions migrated sorvi","code":""}]
