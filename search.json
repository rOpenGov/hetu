[{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Install current devel version R: Test installation loading library: also recommend setting UTF-8 encoding:","code":"devtools::install_github(\"ropengov/hetu\") library(hetu) Sys.setlocale(locale = \"UTF-8\")"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Finnish personal identification numbers (Finnish: henkilötunnus, hetu short), used identify citizens. Hetu PIN consists eleven characters: DDMMYYCZZZQ, DDMMYY day, month year birth, C century marker, ZZZ individual number Q control character. Males odd females even individual number. control character determined dividing DDMMYYZZZ 31 using remainder (modulo 31) pick corresponding character string “0123456789ABCDEFHJKLMNPRSTUVWXY”. example, remainder 0, control character 0 remainder 12, control character C. valid individual number 002-899. Individual numbers 900-999 normal use used temporary artificial PINs. temporary PINs sometimes used different organizations, insurance companies hospitals, individual Finnish citizen, permanent resident exact identity individual determined time. Artificial temporary PINs intended continuous, long term use usually accepted PIN validity checking algorithms. Temporary PINs provide similar information individual’s birth date sex regular PINs. Temporary PINs can also safely used testing purposes, number linked real person.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"personal-identification-numbers-hetu","dir":"Articles","previous_headings":"","what":"Personal identification numbers (HETU)","title":"Finnish personal ID number data toolkit for R (hetu)","text":"basic hetu function can used view information included Finnish personal identification number. data outputted data frame. output can made prettier, example using knitr: hetu function also accepts vectors several identification numbers input: hetu function print warning messages user input vector contains invalid PINs. Validity specific PINs can determined looking valid.pin column.","code":"example_pin <- \"111111-111C\" hetu(example_pin) #>          hetu  sex p.num ctrl.char       date day month year century valid.pin #> 1 111111-111C Male   111         C 1911-11-11  11    11 1911       -      TRUE knitr::kable(hetu(example_pin)) example_pins <- c(\"010101-0101\", \"111111-111C\") knitr::kable(hetu(example_pins)) hetu(c(\"010101-0102\", \"111311-111C\", \"010101-0101\")) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0102 Female   010         2 1901-01-01   1     1 1901       - #> 2 111311-111C   Male   111         C       <NA>  11    NA 1911       - #> 3 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #>   valid.pin #> 1     FALSE #> 2     FALSE #> 3      TRUE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"extracting-specific-information","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Extracting specific information","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Information contained PIN can extracted generic extract parameter. Valid values extraction hetu, sex, personal.number, ctrl.char, date, day, month, year, century, valid.pin .temp. .temp can extracted allow.temp set TRUE. allow.temp set FALSE (default), temporary PINs filtered output information provided .temp meaningless. fields can extracted specialized functions. Extracting sex hetu_sex function: Extracting age current date given date hetu_age function: Dates (birth dates) also function, hetu_date.","code":"hetu(example_pins, extract = \"sex\") #> [1] \"Female\" \"Male\" hetu(example_pins, extract = \"ctrl.char\") #> [1] \"1\" \"C\" hetu_sex(example_pins) #> [1] \"Female\" \"Male\" hetu_age(example_pins) #> The age in years has been calculated at 2025-06-24. #> [1] 124 113 hetu_age(example_pins, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100 hetu_age(example_pins, timespan = \"months\") #> The age in months has been calculated at 2025-06-24. #> [1] 1493 1363 hetu_date(example_pins) #> [1] \"1901-01-01\" \"1911-11-11\""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"validity-checking","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Validity checking","title":"Finnish personal ID number data toolkit for R (hetu)","text":"basic hetu function output includes information validity pin, can extracted using hetu-function valid.pin extract parameter. validity PINs can also determined using hetu_ctrl function, produces vector:","code":"hetu_ctrl(c(\"010101-0101\", \"111111-111C\")) # TRUE TRUE #> [1] TRUE TRUE hetu_ctrl(\"010101-1010\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"artificial-and-temporary-personal-identification-numbers","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Artificial and temporary personal identification numbers","title":"Finnish personal ID number data toolkit for R (hetu)","text":"package functions can made accept artificial temporary personal identification numbers. Artificial temporary PINs can used normally allowing allow.temp parameter. vector regular temporary PINs mixed together prints regular PINs, allow.temp set TRUE. Automatic omitting temporary PINs produce visible error message therefore users need cautious want use temporary PINs. temporary PINs explicitly allowed input vector consists temporary PINs , function return error. allow.temp set TRUE, PINs handled regular PINs. Validation function hetu_ctrl produces FALSE every artificial / temporary PIN, explicitly allowed.","code":"example_temp_pin <- \"010101A900R\" knitr::kable(hetu(example_temp_pin, allow.temp = TRUE)) example_temp_pins <- c(\"010101A900R\", \"010101-0101\") hetu_ctrl(\"010101A900R\", allow.temp = FALSE) #> [1] NA knitr::kable(hetu(example_temp_pins)) knitr::kable(hetu(example_temp_pins, allow.temp = TRUE)) hetu_ctrl(\"010101A900R\", allow.temp = TRUE) #> [1] TRUE knitr::kable(hetu(example_temp_pins)) #FALSE TRUE knitr::kable(hetu(example_temp_pins, allow.temp = TRUE)) #TRUE TRUE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"generating-random-pins","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Generating random PINs","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Random PINs can generated using rpin function. number males generated sample can changed parameter p.male. Default 0.4. default proportion artificial / temporary PINs 0.0, meaning artificial / temporary PINs generated default.","code":"rhetu(n = 4) #> [1] \"180323-144L\" \"230526-034N\" \"301246-7226\" \"080978V740D\" rhetu(n = 4, start.date = \"1990-01-01\", end.date = \"2005-01-01\") #> [1] \"270297-3423\" \"260399-427H\" \"310799-861Y\" \"250902A270L\" random_sample <- rhetu(n = 4, p.male = 0.8) table(random_sample) #> random_sample #> 031021A0556 120527Y187S 160117A275C 200210E521W  #>           1           1           1           1 temp_sample <- rhetu(n = 4, p.temp = 0.5) table(hetu(temp_sample, allow.temp = TRUE, extract = \"is.temp\")) #>  #> FALSE  #>     4"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"diagnostics","dir":"Articles","previous_headings":"Personal identification numbers (HETU)","what":"Diagnostics","title":"Finnish personal ID number data toolkit for R (hetu)","text":"addition information mentioned section Extracting specific information, user can choose print additional columns containing information checks done PINs. diagnostic checks produce TRUE FALSE following categories: valid.p.num, valid.checksum, correct.checksum, valid.date, valid.day, valid.month, valid.year, valid.length valid.century, FALSE meaning hetu somehow incorrect. Diagnostic information can examined closely using subset using separate hetu_diagnostics function. user can print diagnostic information PINs dataset: using extract parameter, user can choose columns printed output table. Valid extract values listed function’s help file. way PINs handled inside hetu-function, diagnostics-function can show unexpected warning messages introduce NAs coercion date-part PIN long. may result inability handle PIN !","code":"diagnosis_example <- c(\"010101-0102\", \"111111-111Q\",                        \"010101B0101\", \"320101-0101\", \"011301-0101\",                        \"010101-01010\", \"010101-0011\") head(hetu(diagnosis_example, diagnostic = TRUE), 3) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0102 Female   010         2 1901-01-01   1     1 1901       - #> 2 111111-111Q   Male   111         Q 1911-11-11  11    11 1911       - #> 3 010101B0101 Female   010         1 2001-01-01   1     1 2001       B #>   valid.pin valid.p.num valid.ctrl.char correct.ctrl.char valid.date valid.day #> 1     FALSE        TRUE            TRUE             FALSE       TRUE      TRUE #> 2     FALSE        TRUE           FALSE             FALSE       TRUE      TRUE #> 3      TRUE        TRUE            TRUE              TRUE       TRUE      TRUE #>   valid.month valid.year valid.length valid.century #> 1        TRUE       TRUE         TRUE          TRUE #> 2        TRUE       TRUE         TRUE          TRUE #> 3        TRUE       TRUE         TRUE          TRUE tail(hetu_diagnostic(diagnosis_example), 3) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE hetu_diagnostic(diagnosis_example, extract = c(\"valid.century\",                                                \"correct.checksum\")) #> Error in hetu_diagnostic(diagnosis_example, extract = c(\"valid.century\", : Trying to extract invalid diagnostic(s) # Faulty example hetu_diagnostic(c(\"01011901-01010\"))"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"business-identity-codes-bid","dir":"Articles","previous_headings":"","what":"Business Identity Codes (BID)","title":"Finnish personal ID number data toolkit for R (hetu)","text":"package also ability generate Finnish Business ID codes (y-tunnus) check validity. Unlike personal identification numbers, additional information can extracted Business IDs.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"generating-random-bids","dir":"Articles","previous_headings":"Business Identity Codes (BID)","what":"Generating random BIDs","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Similar hetu PINs, random Finnish Business IDs (y-tunnus) can generated using rbid function.","code":"bid_sample <- rbid(3) bid_sample #> [1] \"2817006-0\" \"5891569-2\" \"5462040-8\""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"bid-validity-checking","dir":"Articles","previous_headings":"Business Identity Codes (BID)","what":"BID validity checking","title":"Finnish personal ID number data toolkit for R (hetu)","text":"validity Finnish Business Identity Codes can checked similar function hetu_ctrl: bid_ctrl.","code":"bid_ctrl(c(\"0737546-2\", \"1572860-0\")) # TRUE TRUE #> [1] TRUE TRUE bid_ctrl(\"0737546-1\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"various-examples","dir":"Articles","previous_headings":"","what":"Various examples","title":"Finnish personal ID number data toolkit for R (hetu)","text":"Data frames generated hetu function work well tidyverse/dplyr workflows well.","code":"library(hetu) library(tidyverse) library(dplyr)  # Generate data for this example hdat <- tibble(pin = rhetu(n = 4,                            start.date = \"1990-01-01\",                            end.date = \"2005-01-01\"))  # Extract all the hetu information to tibble format hdat <- hdat %>%   mutate(result = map(.x = pin, .f = hetu::hetu)) %>%   unnest(cols = c(result)) hdat"},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"licensing-and-citations","dir":"Articles","previous_headings":"","what":"Licensing and Citations","title":"Finnish personal ID number data toolkit for R (hetu)","text":"work can freely used, modified distributed open license specified DESCRIPTION file. Kindly cite work follows","code":"citation(\"hetu\") #> To cite package ‘hetu’ in publications use: #>  #>   Kantanen P, Bülow E, Lahtinen A, Magnusson M, Paananen J, Lahti L #>   (2025). \"Validating and Extracting Information from National #>   Identification Numbers in R: The Case of Finland and Sweden.\" _The R #>   Journal_, *16*, 4-14. ISSN 2073-4859, doi:10.32614/RJ-2024-023 #>   <https://doi.org/10.32614/RJ-2024-023>. #>  #> We strongly recommend citing the software used in research, as per #> FORCE11 Software citation principles: #>  #>   Pyry Kantanen, Måns Magnusson, Jussi Paananen and Leo Lahti (2025). #>   hetu: Structural Handling of Finnish Personal Identity Codes #>   [Computer software]. R package version 1.2.0. DOI: #>   https://doi.org/10.32614/CRAN.package.hetu #>  #> To see these entries in BibTeX format, use 'print(<citation>, #> bibtex=TRUE)', 'toBibtex(.)', or set #> 'options(citation.bibtex.max=999)'."},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Finnish personal ID number data toolkit for R (hetu)","text":"personal identity code. Digital population data services agency. Valtioneuvoston asetus väestötietojärjestelmästä (128/2010) (Finnish). Valtiovarainministeriö. HETU-uudistuksen loppuraportti (Finnish). Valtiovarainministeriön julkaisuja 2020:20. Business Information System (BIS). Finnish Patent Registration Office.","code":""},{"path":"https://ropengov.github.io/hetu/articles/hetu.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Finnish personal ID number data toolkit for R (hetu)","text":"vignette created ","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] hetu_1.2.0 #>  #> loaded via a namespace (and not attached): #>  [1] cli_3.6.5         knitr_1.50        rlang_1.1.6       xfun_0.52         #>  [5] generics_0.1.4    textshaping_1.0.1 jsonlite_2.0.0    backports_1.5.0   #>  [9] htmltools_0.5.8.1 ragg_1.4.0        sass_0.4.10       rmarkdown_2.29    #> [13] evaluate_1.0.4    jquerylib_0.1.4   fastmap_1.2.0     yaml_2.3.10       #> [17] lifecycle_1.0.4   compiler_4.5.1    fs_1.6.6          timechange_0.3.0  #> [21] htmlwidgets_1.6.4 systemfonts_1.2.3 digest_0.6.37     R6_2.6.1          #> [25] parallel_4.5.1    bslib_0.9.0       checkmate_2.3.2   tools_4.5.1       #> [29] lubridate_1.9.4   pkgdown_2.1.3     cachem_1.1.0      desc_1.4.3"},{"path":"https://ropengov.github.io/hetu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pyry Kantanen. Author, maintainer. Mans Magnusson. Author. Jussi Paananen. Author. Juho Kopra. Contributor. Oskari Luomala. Contributor. Tuomo Nieminen. Contributor. Leo Lahti. Author.","code":""},{"path":"https://ropengov.github.io/hetu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kantanen P, Bülow E, Lahtinen , Magnusson M, Paananen J, Lahti L (2025). “Validating Extracting Information National Identification Numbers R: Case Finland Sweden.” R Journal, 16, 4-14. ISSN 2073-4859, doi:10.32614/RJ-2024-023. Pyry Kantanen, Måns Magnusson, Jussi Paananen Leo Lahti (2025). hetu: Structural Handling Finnish Personal Identity Codes [Computer software]. R package version 1.2.0. DOI: https://doi.org/10.32614/CRAN.package.hetu","code":"@Article{RJ-2024-023,   title = {Validating and Extracting Information from National Identification Numbers in R: The Case of Finland and Sweden},   author = {Pyry Kantanen and Erik B{\\\"u}low and Aleksi Lahtinen and M{\\aa}ns Magnusson and Jussi Paananen and Leo Lahti},   year = {2025},   doi = {10.32614/RJ-2024-023},   journal = {The R Journal},   volume = {16},   issue = {3},   issn = {2073-4859},   pages = {4-14}, } @Misc{,   title = {hetu: Structural Handling of Finnish Personal Identity Codes},   author = {Pyry Kantanen and M{\\aa}ns Magnusson and Jussi Paananen and Leo Lahti},   doi = {10.32614/CRAN.package.hetu},   url = {https://github.com/rOpenGov/hetu},   year = {2025},   note = {R package version 1.2.0}, }"},{"path":[]},{"path":"https://ropengov.github.io/hetu/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Structural Handling of Finnish Personal Identity Codes","text":"hetu R package structural handling identification codes used Finland, importantly Finnish flavour national identification numbers, Finnish personal identity codes (Finnish: henkilötunnus (hetu), Swedish: personbeteckning). functions can also used Finnish Business ID numbers (Finnish: yritys- ja yhteisötunnus (y-tunnus), Swedish: företags- och organisationsnummer (FO-nummer)) Finnish Unique Identification Numbers (FINUID, Finnish: sähköinen asiointitunnus (SATU), Swedish: elektronisk kommunikationskod). syntax package aims , convenient, similar another package specializing national identification numbers: sweidnumbr R package working Swedish personal identity numbers corporation identity numbers.","code":""},{"path":"https://ropengov.github.io/hetu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Structural Handling of Finnish Personal Identity Codes","text":"Install stable version CRAN: Alternatively, use devtools package install latest development version GitHub: Development version can also installed using r-universe:","code":"install.packages(hetu) devtools::install_github(\"rOpenGov/hetu\") # Enable this universe options(repos = c(   ropengov = \"https://ropengov.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) install.packages(\"hetu\")"},{"path":"https://ropengov.github.io/hetu/index.html","id":"loading-the-package-and-accessing-the-tutorial","dir":"","previous_headings":"","what":"Loading the package and accessing the tutorial","title":"Structural Handling of Finnish Personal Identity Codes","text":"Loading package R command line: simple example printing table containing data 2 imaginary personal identity codes: package can also used check validity Finnish Business IDs (Yritys- ja Yhteisötunnus, Y-tunnus short): tutorial included package can viewed vignette-function:","code":"library(hetu) example_hetu <- c(\"010101-0101\", \"111111-111C\") hetu(example_hetu) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #> 2 111111-111C   Male   111         C 1911-11-11  11    11 1911       - #>   valid.pin #> 1      TRUE #> 2      TRUE example_ytunnus <- c(\"5996039-9\", \"5619117-6\", \"6095515-9\") bid_ctrl(example_ytunnus) #> [1] TRUE TRUE TRUE vignette(\"hetu\")"},{"path":"https://ropengov.github.io/hetu/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Structural Handling of Finnish Personal Identity Codes","text":"Submit suggestions bug reports (provide output sessionInfo() packageVersion(\"hetu\") preferably provide reproducible example) Send pull request Star us Github page See website additional contact information","code":""},{"path":"https://ropengov.github.io/hetu/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Structural Handling of Finnish Personal Identity Codes","text":"Kindly cite work follows (citing related paper strongly preferred encourage also citing software used research): grateful contributors! project part rOpenGov.","code":"> print(citation(\"hetu\"), bibtex=TRUE) To cite package ‘hetu’ in publications use:    Kantanen P, Bülow E, Lahtinen A, Magnusson M, Paananen J, Lahti L   (2025). \"Validating and Extracting Information from National   Identification Numbers in R: The Case of Finland and Sweden.\" _The R   Journal_, *16*, 4-14. ISSN 2073-4859, doi:10.32614/RJ-2024-023   <https://doi.org/10.32614/RJ-2024-023>.  A BibTeX entry for LaTeX users is    @Article{RJ-2024-023,     title = {Validating and Extracting Information from National Identification Numbers in R: The Case of Finland and Sweden},     author = {Pyry Kantanen and Erik B{\\\"u}low and Aleksi Lahtinen and M{\\aa}ns Magnusson and Jussi Paananen and Leo Lahti},     year = {2025},     doi = {10.32614/RJ-2024-023},     journal = {The R Journal},     volume = {16},     issue = {3},     issn = {2073-4859},     pages = {4-14},   }  We strongly recommend citing the software used in research, as per FORCE11 Software citation principles:    Pyry Kantanen, Måns Magnusson, Jussi Paananen and Leo Lahti (2025).   hetu: Structural Handling of Finnish Personal Identity Codes   [Computer software]. R package version 1.2.0. DOI:   https://doi.org/10.32614/CRAN.package.hetu  A BibTeX entry for LaTeX users is    @Misc{,     title = {hetu: Structural Handling of Finnish Personal Identity Codes},     author = {Pyry Kantanen and M{\\aa}ns Magnusson and Jussi Paananen and Leo Lahti},     doi = {10.32614/CRAN.package.hetu},     url = {https://github.com/rOpenGov/hetu},     year = {2025},     note = {R package version 1.2.0},   }"},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Validity of Finnish Business ID (Y-tunnus) — bid_ctrl","title":"Check Validity of Finnish Business ID (Y-tunnus) — bid_ctrl","text":"function checks whether bid (Finnish Business ID) valid. Returns TRUE FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Validity of Finnish Business ID (Y-tunnus) — bid_ctrl","text":"","code":"bid_ctrl(bid)"},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Validity of Finnish Business ID (Y-tunnus) — bid_ctrl","text":"bid vector 1 business identity numbers","code":""},{"path":"https://ropengov.github.io/hetu/reference/bid_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Validity of Finnish Business ID (Y-tunnus) — bid_ctrl","text":"","code":"bid_ctrl(c(\"0000000-0\", \"0000001-9\")) # TRUE TRUE #> [1] TRUE TRUE bid_ctrl(\"0737546-1\") # FALSE #> [1] FALSE"},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package hetu. — hetu-deprecated","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"-deprecated\").","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"","code":"pin_to_date(pin)"},{"path":"https://ropengov.github.io/hetu/reference/hetu-deprecated.html","id":"pin-to-date","dir":"Reference","previous_headings":"","what":"pin_to_date","title":"Deprecated functions in package hetu. — hetu-deprecated","text":"pin_to_date, use pin_date.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"Extract embedded information Finnish personal identity    codes (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"","code":"hetu(   pin,   extract = NULL,   allow.temp = FALSE,   diagnostic = FALSE,   as.factor = FALSE )"},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"pin Finnish personal identity code(s) character vector extract Extract selected part information. Valid values \"hetu\", \"sex\", \"p.num\", \"ctrl.char\", \"date\", \"day\", \"month\", \"year\", \"century\", \".temp\". NULL (default), returns information. allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed. diagnostic Print additional information possible problems PINs. checks \"valid.p.num\", \"valid.ctrl.char\", \"correct.ctrl.char\", \"valid.date\", \"valid.day\", \"valid.month\", \"valid.length\", \"valid.century\". Default FALSE returns diagnostic information. .factor Makes fields \"sex\", \"p.num\", \"ctrl.char\" \"century\" factors slightly reduced memory footprint. Default FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"Finnish personal identity code data.frame,     extract parameter set, requested part    information vector. Returns error NA given    character vector valid Finnish personal identity code. hetu Finnish personal identity code character vector.     correct pin form DDMMYYCZZZQ, DDMMYY stands     date, C century sign, ZZZ personal number Q control     character. sex sex person character vector (\"Male\" \"Female\") p.num Personal number (individual number) part identity code ctrl.char Control character personal identity code date Birthdate day Day birthdate month Month birthdate year Year birthdate century Century character determining century (1800s, 1900s 2000s) person's birth. See details information valid.pin personal identity code pass validity    checks: (TRUE FALSE)","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"Starting 1st January 2023, amendment government decree Population Information System (128/2010) expanded number available century markers (See references: Valtioneuvoston asetus VM/2022/124) scrapped old practices. users package visible change people born 1900s can now assigned \"Y\", \"X\", \"W\", \"V\" \"U\", addition old \"-\" (slash) marker. People born 2000s can assigned \"B\", \"C\", \"D\", E\" \"F\", addition old marker, \"\". people born 1800s \"+\" (plus sign) remains valid marker. amendment affect already existing personal identity codes. change done mitigate diminishing pool available, unique identity codes. historical reasons, century marker code always taken account determining uniqueness number. meant individual number parts recycled people born different centuries, diminishing amount available numbers people born new century. example, female born 1st January 1901 assigned personal identity code \"010101-0101\" (individual code part \"010\"), female born 1st January 2001 assigned code \"010101A0101\" contain individual code person born 1901 individual codes recycled. amended decree uniqueness personal identity code considered looking personal identity code whole. means now permissible personal identity codes \"100190-999P\" \"100190Y999P\" time, denoting two different individuals (see references: Digital population data services agency announcement). practice, codes new separators issued ranges ranges currently used separators run . means might take see people born 2000s assigned century marker \"C\" people born 1900s assigned century marker \"X\", still plenty numbers ranges \"B\" \"Y\" well, addition numbers left original ranges \"\" \"-\". first personal identity code new separator \"Y\" assigned December 2023 (see Digi- ja väestötietovirasto 2023). result hetu package may now give \"unrealistic\" personal identity codes sense codes yet actually use. However, aim package simulate actual distributions personal identity codes century markers population (actually used unused codes unknown us), provide tool can used extract data codes, user encounter point. Writing sanity checks probably good idea people interested detecting unusual patterns databases registries.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"Valtioneuvoston asetus VM/2022/124 Valtioneuvoston asetus VM/2022/124 Digi- ja väestötietovirasto. (2023). Uudet välimerkit takaavat henkilötunnusten riittävyyden - ensimmäinen uudenlainen henkilötunnus myönnettiin tällä viikolla Digital Population Data Services Agency. Reform separators personal identity code","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"Pyry Kantanen, Jussi Paananen","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Extraction Tool for Finnish Personal Identity Codes — hetu","text":"","code":"hetu(\"111111-111C\") #>          hetu  sex p.num ctrl.char       date day month year century valid.pin #> 1 111111-111C Male   111         C 1911-11-11  11    11 1911       -      TRUE hetu(\"111111-111C\")$date #> [1] \"1911-11-11\" hetu(\"111111-111C\")$sex #> [1] \"Male\" # Same as previous, but using extract argument hetu(\"111111-111C\", extract=\"sex\") #> [1] \"Male\" # Process a vector of hetu's hetu(c(\"010101-0101\", \"111111-111C\")) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 010101-0101 Female   010         1 1901-01-01   1     1 1901       - #> 2 111111-111C   Male   111         C 1911-11-11  11    11 1911       - #>   valid.pin #> 1      TRUE #> 2      TRUE # Process a vector of hetu's and extract sex information from each hetu(c(\"010101-0101\", \"111111-111C\"), extract=\"sex\") #> [1] \"Female\" \"Male\"   # Process codes with new century markers new_codes <- c(\"010594Y9032\", \"010594Y9021\", \"020594X903P\") hetu(new_codes) #> [1] NA"},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Control Character for Personal Identity Code — hetu_control_char","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"Calculate valid control character incomplete    Finnish personal identity codes (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"","code":"hetu_control_char(pin, with.century = TRUE)"},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"pin incomplete PIN date, century marker (optional, see parameter .century) personal number .century TRUE (default), function assumes PIN input contains century marker (DDMMYYQZZZ). FALSE, function assumes PIN contains date personal number (DDMMYYZZZ).","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"Control character, either number 0-9 letter.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"method calculating control character devised    mathematician Erkki Pale (1962) detect input errors also    detect errors produced early punch card machines. long number    produced writing birth date personal number together    divided 31 remainder used look control character    separate table containing alphanumeric characters except letters    G, , O, Q Z. method calculating control character need century    character therefore function option omit .","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_control_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Control Character for Personal Identity Code — hetu_control_char","text":"","code":"hetu_control_char(\"010101-010\") #> [1] \"1\" hetu_control_char(\"010101010\", with.century = FALSE) #> [1] \"1\""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","title":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","text":"Prints information tests used    confirm reject validity personal identity code.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","text":"","code":"hetu_diagnostic(pin, extract = NULL)  pin_diagnostic(pin, extract = NULL)"},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","text":"pin Finnish personal identification number character vector, vector identification numbers character vectors extract Extract selected part diagnostic information. Valid values \"hetu\", \".temp\", \"valid.p.num\", \"valid.ctrl.char\", \"correct.ctrl.char\", \"valid.date\", \"valid.day\", \"valid.month\", \"valid.length\", \"valid.century\". NULL (default), returns information.","code":""},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","text":"data.frame containing diagnostic checks PINs.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/hetu_diagnostic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics Tool for Personal Identity Codes — hetu_diagnostic","text":"","code":"diagnosis_example <- c(\"010101-0102\", \"111111-111Q\", \"010101B0101\", \"320101-0101\", \"011301-0101\", \"010101-01010\", \"010101-0011\", \"010101-9011\", \"010101-901S\") ## Print all diagnostics for various fake personal identity codes hetu_diagnostic(diagnosis_example) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 1  010101-0102   FALSE        TRUE            TRUE             FALSE       TRUE #> 2  111111-111Q   FALSE        TRUE           FALSE             FALSE       TRUE #> 3  010101B0101   FALSE        TRUE            TRUE              TRUE       TRUE #> 4  320101-0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #> 8  010101-9011    TRUE        TRUE            TRUE             FALSE       TRUE #> 9  010101-901S    TRUE        TRUE            TRUE              TRUE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 1      TRUE        TRUE       TRUE         TRUE          TRUE #> 2      TRUE        TRUE       TRUE         TRUE          TRUE #> 3      TRUE        TRUE       TRUE         TRUE          TRUE #> 4     FALSE        TRUE       TRUE         TRUE          TRUE #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE #> 8      TRUE        TRUE       TRUE         TRUE          TRUE #> 9      TRUE        TRUE       TRUE         TRUE          TRUE # Extract century-related checks hetu_diagnostic(diagnosis_example, extract = \"valid.century\") #>           hetu valid.century #> 1  010101-0102          TRUE #> 2  111111-111Q          TRUE #> 3  010101B0101          TRUE #> 4  320101-0101          TRUE #> 5  011301-0101          TRUE #> 6 010101-01010          TRUE #> 7  010101-0011          TRUE #> 8  010101-9011          TRUE #> 9  010101-901S          TRUE # Print a summary in natural language summary(hetu_diagnostic(diagnosis_example)) #> Diagnostics for 9 hetu objects:  #> Number of valid hetu objects: 2  #> Number of valid and non-temporary* hetu objects: 1  #> Number of valid and temporary** hetu objects: 1  #>  #> Number of invalid hetu objects: 7  #> Number of invalid and non-temporary* hetu objects: 6  #> Number of invalid and temporary** hetu objects: 1  #>  #>  * non-temporary: p.num in range [002-899] #>  ** temporary: p.num in range [900-999] #>  diagnosis_example <- c(\"010101-0102\", \"111111-111Q\", \"010101B0101\", \"320101-0101\", \"011301-0101\", \"010101-01010\", \"010101-0011\") ## Print all diagnoses pin_diagnostic(diagnosis_example) #>           hetu is.temp valid.p.num valid.ctrl.char correct.ctrl.char valid.date #> 1  010101-0102   FALSE        TRUE            TRUE             FALSE       TRUE #> 2  111111-111Q   FALSE        TRUE           FALSE             FALSE       TRUE #> 3  010101B0101   FALSE        TRUE            TRUE              TRUE       TRUE #> 4  320101-0101   FALSE        TRUE            TRUE              TRUE      FALSE #> 5  011301-0101   FALSE        TRUE            TRUE             FALSE      FALSE #> 6 010101-01010   FALSE        TRUE            TRUE              TRUE       TRUE #> 7  010101-0011   FALSE       FALSE            TRUE             FALSE       TRUE #>   valid.day valid.month valid.year valid.length valid.century #> 1      TRUE        TRUE       TRUE         TRUE          TRUE #> 2      TRUE        TRUE       TRUE         TRUE          TRUE #> 3      TRUE        TRUE       TRUE         TRUE          TRUE #> 4     FALSE        TRUE       TRUE         TRUE          TRUE #> 5      TRUE       FALSE       TRUE         TRUE          TRUE #> 6      TRUE        TRUE       TRUE        FALSE          TRUE #> 7      TRUE        TRUE       TRUE         TRUE          TRUE"},{"path":"https://ropengov.github.io/hetu/reference/is.diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an Object from Class ","title":"Is an Object from Class ","text":"Returns TRUE object class \"diagnostic\"","code":""},{"path":"https://ropengov.github.io/hetu/reference/is.diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an Object from Class ","text":"","code":"is.diagnostic(object)"},{"path":"https://ropengov.github.io/hetu/reference/is.diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an Object from Class ","text":"object Object tested","code":""},{"path":"https://ropengov.github.io/hetu/reference/is.diagnostic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an Object from Class ","text":"TRUE FALSE","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Age from Personal Identity Code — pin_age","title":"Extract Age from Personal Identity Code — pin_age","text":"Calculate age years, months, weeks days    personal identity codes.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Age from Personal Identity Code — pin_age","text":"","code":"pin_age(pin, date = Sys.Date(), timespan = \"years\", allow.temp = FALSE)  hetu_age(pin, date = Sys.Date(), timespan = \"years\", allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Age from Personal Identity Code — pin_age","text":"pin Finnish personal identity code(s) character vector date Date age calculated. vector provided must length pin argument. timespan Timespan use calculate age. possible timespans : years (Default) months weeks days allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Age from Personal Identity Code — pin_age","text":"Age integer vector.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Age from Personal Identity Code — pin_age","text":"","code":"ex_pin <- c(\"010101-0101\", \"111111-111C\") pin_age(ex_pin, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100  ex_pin <- c(\"010101-0101\", \"111111-111C\") hetu_age(ex_pin, date = \"2012-01-01\") #> The age in years has been calculated at 2012-01-01. #> [1] 111 100"},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Validity of Personal Identity Code — pin_ctrl","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"Validate Finnish personal identity codes (hetu).","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"","code":"pin_ctrl(pin, allow.temp = FALSE)  hetu_ctrl(pin, allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"pin Finnish personal identity code(s) character vector allow.temp TRUE, temporary PINs (personal numbers 900-999) handled similarly regular PINs (personal numbers 002-899), meaning otherwise valid temporary PIN return TRUE. Default FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"logical vector indicating whether input vector contains valid  Finnish personal identity codes.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Validity of Personal Identity Code — pin_ctrl","text":"","code":"pin_ctrl(\"010101-0101\") # TRUE #> [1] TRUE pin_ctrl(\"010101-010A\") # FALSE #> [1] FALSE pin_ctrl(c(\"010101-0101\", \"010101-010A\")) # TRUE FALSE #> [1]  TRUE FALSE hetu_ctrl(\"010101-0101\") # TRUE #> [1] TRUE hetu_ctrl(\"010101-010A\") # FALSE #> [1] FALSE hetu_ctrl(c(\"010101-0101\", \"010101-010A\")) # TRUE FALSE #> [1]  TRUE FALSE"},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Date of Birth from Personal Identity Code — pin_date","title":"Extract Date of Birth from Personal Identity Code — pin_date","text":"Returns date birth date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Date of Birth from Personal Identity Code — pin_date","text":"","code":"pin_date(pin, allow.temp = FALSE)  hetu_date(pin, allow.temp = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Date of Birth from Personal Identity Code — pin_date","text":"pin Finnish personal identity code(s) character vector allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Date of Birth from Personal Identity Code — pin_date","text":"Date birth vector date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Date of Birth from Personal Identity Code — pin_date","text":"","code":"pin_date(c(\"010101-0101\", \"111111-111C\")) #> [1] \"1901-01-01\" \"1911-11-11\"  hetu_date(c(\"010101-0101\", \"111111-111C\")) #> [1] \"1901-01-01\" \"1911-11-11\""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Sex from Personal Identity Code — pin_sex","title":"Extract Sex from Personal Identity Code — pin_sex","text":"Extract sex (binary) Finnish personal identification    code.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Sex from Personal Identity Code — pin_sex","text":"","code":"pin_sex(pin, allow.temp = TRUE)  hetu_sex(pin, allow.temp = TRUE)"},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Sex from Personal Identity Code — pin_sex","text":"pin Finnish personal identity code(s) character vector allow.temp Allow artificial temporary PINs (personal numbers 900-999). FALSE (default), PINs intended official use (personal numbers 002-899) allowed.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Sex from Personal Identity Code — pin_sex","text":"Factor label 'Male' 'Female'.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Sex from Personal Identity Code — pin_sex","text":"Pyry Kantanen, Leo Lahti","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_sex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Sex from Personal Identity Code — pin_sex","text":"","code":"pin_sex(\"010101-010A\") #> [1] \"Female\" hetu_sex(\"010101-010A\") #> [1] \"Female\""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"ID to Date. — pin_to_date-deprecated","title":"ID to Date. — pin_to_date-deprecated","text":"Calculates date birth date format.","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ID to Date. — pin_to_date-deprecated","text":"","code":"pin_to_date(pin)"},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ID to Date. — pin_to_date-deprecated","text":"pin Finnish ID number","code":""},{"path":"https://ropengov.github.io/hetu/reference/pin_to_date-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ID to Date. — pin_to_date-deprecated","text":"Date birth vector date format.","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/plot.diagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting method for diagnostic class objects — plot.diagnostic","title":"Plotting method for diagnostic class objects — plot.diagnostic","text":"Creates concise plot visualizes TRUE FALSE cases diagnostics data frame","code":""},{"path":"https://ropengov.github.io/hetu/reference/plot.diagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting method for diagnostic class objects — plot.diagnostic","text":"","code":"# S3 method for class 'diagnostic' plot(x, negate.logicals = FALSE, labels = TRUE, ...)"},{"path":"https://ropengov.github.io/hetu/reference/plot.diagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting method for diagnostic class objects — plot.diagnostic","text":"x \"summary.diagnostic\" object negate.logicals negate TRUE FALSE logicals, default FALSE. Sometimes may beneficial emphasize FALSE cases instead TRUE labels include column labels y-axis, default TRUE ... Arguments passed methods, graphical parameters. example: type type plot drawn.      Default \"h\" histogram / high density vertical lines. lwd line width double Default 1.0 See plot par    options","code":""},{"path":"https://ropengov.github.io/hetu/reference/plot.diagnostic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting method for diagnostic class objects — plot.diagnostic","text":"seems canonical answer call type plot. names can found online describing plot binary response value axis : one-dimensional scatterplot, sparkline, rug plot, strip plot / strip chart.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick Data Frame — quickdf","title":"Quick Data Frame — quickdf","text":"Speedups data.frame creation.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick Data Frame — quickdf","text":"","code":"quickdf(x)"},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick Data Frame — quickdf","text":"x named list equal length vectors","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick Data Frame — quickdf","text":"data.frame","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quick Data Frame — quickdf","text":"20x faster .data.frame.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quick Data Frame — quickdf","text":"Idea borrowed http://adv-r..co.nz/Profiling.html.","code":""},{"path":"https://ropengov.github.io/hetu/reference/quickdf.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quick Data Frame — quickdf","text":"HW/LL","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","title":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","text":"function generates random Finnish Business ID's, bid-numbers (Y-tunnus).","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","text":"","code":"rbid(n)"},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","text":"n number generated BIDs","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","text":"vector generated BID-numbers.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rbid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Finnish Business ID's (Y-tunnus) — rbid","text":"","code":"x <- rbid(3) bid_ctrl(x) #> [1] TRUE TRUE TRUE"},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Personal Identity Codes — rpin","title":"Generate Random Personal Identity Codes — rpin","text":"function generates random Finnish personal identity codes    (hetu codes).","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Personal Identity Codes — rpin","text":"","code":"rpin(   n,   start.date = as.Date(\"1895-01-01\"),   end.date = Sys.Date(),   p.male = 0.4,   p.temp = 0,   num.cores = 1 )  rhetu(   n,   start.date = as.Date(\"1895-01-01\"),   end.date = Sys.Date(),   p.male = 0.4,   p.temp = 0,   num.cores = 1 )"},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Personal Identity Codes — rpin","text":"n number generated hetu-pins start.date Lower limit generated hetu dates, character string ISO 8601 standard, example \"2001-02-03\". Default \"1895-01-01\". end.date Upper limit generated hetu. Default current date. p.male Probability males, 0.0 1.0. Default 0.4. p.temp Probability temporary identification numbers, 0.0 1.0. Default 0.0. num.cores number cores parallel processing. number available cores can determined detectCores(). Default 1.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Personal Identity Codes — rpin","text":"vector generated hetu-pins.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Random Personal Identity Codes — rpin","text":"function return error \"positive probabilities\" sample.int function try generate many codes short enough timeframe. theoretical upper limit valid PINs millions, number valid PINs per day used 898 PINs maximum, meaning 327770 year. Attempting generate e.g. 1000 pins timespan one day result error. practice theoretical upper limit number much lower since old practice personal number component \"recycled\" used past. illustrate, identity code \"010101-0101\" already assigned someone born 1901-01-01, similar code \"010101A0101\" someone born 2001-01-01 used. hetu package version 1.1.0 taken account new government decree increased amount valid century markers therefore increased amount valid personal codes per day. Additionally, decree made possible recycle individual codes, century marker now thought distinguishing character personal identity code. However, current implementation still keeps old 898 codes per day limit intact, assigns new century markers low probability: old markers \"-\" \"\" given 95  markers given 1 future may altered waterfall pattern initial 898 codes date get \"-\" century marker, next 898 get \"Y\", . mean day 5388 valid codes distribution century markers realistic sense additional century markers taken use previous range exhausted. However, require generating rather large datasets even basic testing purposes.","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Random Personal Identity Codes — rpin","text":"Pyry Kantanen, Jussi Paananen","code":""},{"path":"https://ropengov.github.io/hetu/reference/rpin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Personal Identity Codes — rpin","text":"","code":"x <- rpin(3) hetu(x) #>          hetu    sex p.num ctrl.char       date day month year century #> 1 020433-2215   Male   221         5 1933-04-02   2     4 1933       - #> 2 170147-462T Female   462         T 1947-01-17  17     1 1947       - #> 3 101002A0333   Male   033         3 2002-10-10  10    10 2002       A #>   valid.pin #> 1      TRUE #> 2      TRUE #> 3      TRUE hetu(x, extract = \"sex\") #> [1] \"Male\"   \"Female\" \"Male\"   hetu(x, extract = \"ctrl.char\") #> [1] \"5\" \"T\" \"3\"  x <- rhetu(3) x #> [1] \"130334-674A\" \"200438-883D\" \"230379-412X\""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Calculate valid control character incomplete    Finnish Unique Identification Number (FINUID, sähköinen asiointitunnus    SATU).","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"","code":"satu_control_char(pin, print.full = FALSE)"},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"pin incomplete FINUID 8 first numbers. print.full function print whole FINUID-number (TRUE) control character (FALSE). Default FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Control character, either number 0-9 letter (length 1    character). parameter print.full set TRUE, function returns    complete FINUID / SATU number (length 9 characters).","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"method calculating control character devised    mathematician Erkki Pale (1962) detect input errors also    detect errors produced early punch card machines. long number    produced writing birth date personal number together    divided 31 remainder used look control character    separate table containing alphanumeric characters except letters    G, , O, Q Z. method calculating control character need century    character therefore function option omit .","code":""},{"path":[]},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"Pyry Kantanen","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_control_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finnish Unique Identification Number Control Character Calculator — satu_control_char","text":"","code":"# The first assigned FINUID number, 10000001N. satu_control_char(\"10000001\") #> [1] \"N\""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Validity of Finnish Unique Identification Number (SATU) — satu_ctrl","title":"Check Validity of Finnish Unique Identification Number (SATU) — satu_ctrl","text":"function checks whether satu (Finnish Unique Identification Number) valid. Returns TRUE FALSE.","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Validity of Finnish Unique Identification Number (SATU) — satu_ctrl","text":"","code":"satu_ctrl(satu)"},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Validity of Finnish Unique Identification Number (SATU) — satu_ctrl","text":"satu vector 1 Unique Identification Numbers","code":""},{"path":"https://ropengov.github.io/hetu/reference/satu_ctrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Validity of Finnish Unique Identification Number (SATU) — satu_ctrl","text":"","code":"satu_ctrl(\"10000001N\") # TRUE #> [1] TRUE satu_ctrl(c(\"10000001N\", \"20000001B\")) # TRUE FALSE #> [1]  TRUE FALSE"},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-120-2025-06-24","dir":"Changelog","previous_headings":"","what":"hetu 1.2.0 (2025-06-24)","title":"hetu 1.2.0 (2025-06-24)","text":"Edit package citation include reference joint article R Journal describing hetu sweidnumbr packages","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-110-2024-12-03","dir":"Changelog","previous_headings":"","what":"hetu 1.1.0 (2024-12-03)","title":"hetu 1.1.0 (2024-12-03)","text":"CRAN release: 2024-12-04 Add summary method plot methods data.frames produced hetu_diagnostic() Add support new century markers added Finnish government decree 8.7.2022/690 amended another government decree 25.2.2010/128 (“Government Decree Population Information System”).","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-107-2022-05-16","dir":"Changelog","previous_headings":"","what":"hetu 1.0.7 (2022-05-16)","title":"hetu 1.0.7 (2022-05-16)","text":"CRAN release: 2022-05-21 subsetting-parameter (TRUE FALSE) dropped hetu_diagnostic() function unnecessary syntactic sugar difficult communicate users. Similar functionalities can easily achieved standard subsetting functionalities found base R especially tidyverse. satu_ctrl_char() parameter printing whole SATU/FINUID-numbers now called “print.full” instead “complement”.","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-1069000-2022-01-18","dir":"Changelog","previous_headings":"","what":"hetu 1.0.6.9000 (2022-01-18)","title":"hetu 1.0.6.9000 (2022-01-18)","text":"Rewritten rpin() function increased speed Added new function hetu_control_char() internal use functions well convenience (sometimes know rest identity code just need determine control character) Added support checking validity Finnish electronic Unique Identification Numbers (SATU / FINUID). Two new functions: satu_ctrl() satu_ctrl_char(), former works like hetu_ctrl() latter works like abovementioned hetu_control_char() hetu() table column name checksum changed descriptive ctrl.char. change also affects related column names hetu_diagnostic(). illustrate point Finnish personal identity code control characters (numbers letters) instead check digits.","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-103-2021-07-28","dir":"Changelog","previous_headings":"","what":"hetu 1.0.3 (2021-07-28)","title":"hetu 1.0.3 (2021-07-28)","text":"Implementing recommendations goodpractice (whole package) lintr (hetu.R) better code legibility Renamed internal objects make easier distinguish user input (function arguments), internal objects used intermediate steps output names data table New function hetu_control_char() easy calculation control characters birth date personal numbers already known","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-102-2020-11-23","dir":"Changelog","previous_headings":"","what":"hetu 1.0.2 (2020-11-23)","title":"hetu 1.0.2 (2020-11-23)","text":"Moving away Travis CI GitHub Actions","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-101-2020-10-15","dir":"Changelog","previous_headings":"","what":"hetu 1.0.1 (2020-10-15)","title":"hetu 1.0.1 (2020-10-15)","text":"CRAN release: 2020-10-24 Build submitted CRAN organized vignette, hetu BID examples separated Minor fixes hetu_diagnostic() rbid()","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-031-2020-10-14","dir":"Changelog","previous_headings":"","what":"hetu 0.3.1 (2020-10-14)","title":"hetu 0.3.1 (2020-10-14)","text":"Added function generating Finnish Business IDs, rbid() Added new alias hetu_diagnostic(), pin_diagnostic(), better consistency functions New examples package vignette","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-030-2020-10-13","dir":"Changelog","previous_headings":"","what":"hetu 0.3.0 (2020-10-13)","title":"hetu 0.3.0 (2020-10-13)","text":"Optimized functions: generating handling large amount PINs now much faster (tested 5.5 million PINs) new bid_ctrl() function checking validity Finnish Business IDs hetu() table column name personal.number changed shorter p.num","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-024-2020-09-10","dir":"Changelog","previous_headings":"","what":"hetu 0.2.4 (2020-09-10)","title":"hetu 0.2.4 (2020-09-10)","text":"Option print explicit diagnostics hetu-function hetu_diagnostic() function easier viewing diagnostic information","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-021-023-2020-09-09","dir":"Changelog","previous_headings":"","what":"hetu 0.2.1-0.2.3 (2020-09-09)","title":"hetu 0.2.1-0.2.3 (2020-09-09)","text":"Updates pkgdown Improvements vignette Warning messages new tests invalid inputs Fixes hetu.R handling temporary / artificial pins Tests deprecated pin_to_date function Added codecov integration Minor fixes","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-020-2020-09-04","dir":"Changelog","previous_headings":"","what":"hetu 0.2.0 (2020-09-04)","title":"hetu 0.2.0 (2020-09-04)","text":"Added rpin() function generating random hetu PINs Added ability handle temporary artificial hetu PINs (allow.temp, .temp) Added tests achieve 100 % test coverage Deprecation pin_to_date, addition pin_date() Numerous minor bugfixes additions help files vignettes","code":""},{"path":"https://ropengov.github.io/hetu/news/index.html","id":"hetu-011-2012-06-26","dir":"Changelog","previous_headings":"","what":"hetu 0.1.1 (2012-06-26)","title":"hetu 0.1.1 (2012-06-26)","text":"Package created based earlier functions migrated sorvi","code":""}]
